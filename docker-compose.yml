version: '3.1'
# See https://docs.docker.com/compose/overview/ for more information.

# If you make changes to this file or any related files, apply them by
# navigating to the directory that holds this file and run this as root:
#   docker-compose down; docker-compose up -d

# Create two networks: one for front-end containers that we'll make
# publicly accessible to the internet, and one for private back-end.
networks:
  frontend:
  backend:

# Create persistent Docker volumes to preserve important data.
# We don't want our data to be lost when restarting containers.
volumes:
  jiradata:
   driver: local
  jiradbdata:
   driver: local
  confluencedata:
   driver: local
  confluencedbdata:
   driver: local

# Create our containers.
services:
  # Traefik is a reverse proxy. It handles SSL and passes traffic to
  # Docker containers via rules you define in docker-compose labels.
  # Its dashboard is at http://example.com/traefik/ (behind a login).
  traefik:
    # https://hub.docker.com/_/traefik/
    container_name: traefik
    image: traefik:latest
    command: --api --docker --acme.email="${ACME_EMAIL}"
    restart: always
    networks:
      - backend
      - frontend
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock # Access to Docker
      - ./traefik.toml:/traefik.toml              # Traefik configuration
      - ./acme.json:/acme.json                    # SSL certificates
    ports:
      # Map port 80 and 443 on the host to this container.
      - "80:80"
      - "443:443"
    labels:
      - "traefik.docker.network=frontend"
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:${TRAEFIK_DOMAINS}; PathPrefixStrip:/traefik"
      - "traefik.port=9090"
      - "traefik.protocol=http"
      # Remove next line to disable login prompt for the dashboard.
      - "traefik.frontend.auth.basic=${BASIC_AUTH}"

  # Watchtower detects if any linked containers have an new image
  # available, automatically updating & restarting them if needed.
  watchtower:
    container_name: watchtower
    # https://hub.docker.com/r/centurylink/watchtower/
    image: v2tec/watchtower:latest
    # https://github.com/v2tec/watchtower#options
    # This schedule applies updates (if available) at midnight.
    command: --cleanup --schedule "0 0 0 * * *"
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=false"

  jira:
    container_name: jira
    depends_on:
      - jiradb
    image: cptactionhank/atlassian-jira-software
    networks:
      - frontend
      - backend
    volumes:
      - jiradata:/var/atlassian/jira
    ports:
      - '8080:8080'
    environment:
      X_PROXY_NAME: ${JIRA_PROXY_NAME}
      X_PROXY_PORT: ${JIRA_PROXY_PORT}
      X_PROXY_SCHEME: ${JIRA_PROXY_SCHEME}
      X_CATALINA_OPTS: ${JIRA_CATALINA_OPTS}
    logging:
      # limit logs retained on host to 25MB
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "50"
    labels:
     - "traefik.docker.network=frontend"
     - "traefik.enable=true"
     - "traefik.frontend.rule=Host:${JIRA_DOMAINS}"
     - "traefik.port=8080"
     - "traefik.protocol=http"
      # Uncomment the following line to enable HSTS header.
      #- "traefik.frontend.headers.STSSeconds=15768000"

  confluence:
    container_name: confluence
    depends_on:
      - confluencedb
    image: cptactionhank/atlassian-confluence
    networks:
      - frontend
      - backend
    volumes:
      - confluencedata:/var/atlassian/confluence
    ports:
      - '8090:8090'
      - '8091:8091'
    environment:
      CATALINA_OPTS: ${CON_CATALINA_OPTS}
      X_PROXY_NAME: ${CONFLUENCE_PROXY_NAME}
      X_PROXY_PORT: ${CONFLUENCE_PROXY_PORT}
      X_PROXY_SCHEME: ${CONFLUENCE_PROXY_SCHEME}
    labels:
     - "traefik.docker.network=frontend"
     - "traefik.enable=true"
     - "traefik.frontend.rule=Host:${CONFLUENCE_DOMAINS}"
     - "traefik.port=8090"
     - "traefik.protocol=http"
      # Uncomment the following line to enable HSTS header.
      #- "traefik.frontend.headers.STSSeconds=15768000"

  jiradb:
   container_name: jiradb
   image: postgres:9.6-alpine
   networks:
    - backend
   ports:
    - 5432:5432
   volumes:
    - jiradbdata:/var/lib/postgresql/data
   environment:
    POSTGRES_PASSWORD: ${JIRA_DB_PASSWORD}
    POSTGRES_USER: ${JIRA_DB_USER}
    POSTGRES_DB: ${JIRA_DB_NAME}
    #POSTGRES_INITDB_ARGS: ""--encoding=UNICODE --locale=C"
    #PGDATA: /var/lib/postgresql/data/pgdata
   logging:
     # limit logs retained on host to 25MB
     driver: "json-file"
     options:
      max-size: "500k"
      max-file: "50"
   labels:
    - "traefik.enable=false"

  confluencedb:
   container_name: confluencedb
   image: postgres:9.6-alpine
   networks:
    - backend
   ports:
    - 5433:5432
   volumes:
    - confluencedbdata:/var/lib/postgresql/data
   environment:
    POSTGRES_PASSWORD: ${CON_DB_PASSWORD}
    POSTGRES_USER: ${CON_DB_USER}
    POSTGRES_DB: ${CON_DB_NAME}
    #POSTGRES_INITDB_ARGS: ""--encoding=UNICODE --locale=C"
    #PGDATA: /var/lib/postgresql/data/pgdata
   logging:
     # limit logs retained on host to 25MB
     driver: "json-file"
     options:
      max-size: "500k"
      max-file: "50"
   labels:
    - "traefik.enable=false"
